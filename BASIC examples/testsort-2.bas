1000 REM *************************************************
1020 REM *   SORT-TEST - ADAPTED BY LEONARDO MILIANI     *
1040 REM * FOR LM80C FROM THE ORIGINAL SOURCE BY ERNESTO *
1050 REM * SIDOTTI & RINALDO NALDI PUBLISHED ON ISSUE #9 *
1060 REM * OF <COMMODORE> ITALIAN MAGAZINE (05/1985)     *
1070 REM *         (THIRD REVISION 2022/03/24)          *
1080 REM *************************************************
1100 REM
1110 REM ** PRINT MAIN TITLE **
1120 SCREEN 0:RT=11:REM # OF ALGHORITHMS
1130 DIM AL$(RT):Y=11:RESTORE 56310:FOR I=1 TO RT
1140 READ AL$(I):NEXT:RESTORE 56000:FOR I=0 TO 2:LOCATE 8,I
1150 FOR L=1 TO 24:READ A:PRINT CHR$(A);:NEXT:NEXT
1160 PRINT:PRINT
1170 PRINT"# OF DATA ":PRINT"% OF ORDER"
1180 PRINT:PRINT
1190 REM ** PRINT MAIN FORM **
1200 RESTORE 56060
1210 FOR I=1 TO 3:FOR L=1 TO 40:READ A:PRINT CHR$(A);:NEXT:NEXT
1220 FOR I=1 TO RT:PRINT CHR$(158);SPC(9);CHR$(158);SPC(8);
1230 PRINT CHR$(158);SPC(8);CHR$(158);
1240 PRINT SPC(8);CHR$(158);;" ";CHR$(158);:NEXT
1250 RESTORE 56210:FOR L=1 TO 40:READ A:PRINT CHR$(A);:NEXT
1300 REM ** PRINT ALGHORITHMS NAMES
1310 FOR I=1 TO RT:LOCATE 1,10+I:PRINT AL$(I);:NEXT
1410 LOCATE 11,4:PRINT SPC(20);
1420 LOCATE 11,4:INPUT N$
1430 ND=VAL(N$):IF ND>9999 OR ND<10 THEN1410
1440 LOCATE 11,5:INPUT D$
1450 PA=VAL(D$)
1460 IF PA<0 OR PA>100 THEN LOCATE 11,5:PRINT SPC(20);:GOTO 1440
1480 A$="GENERATING DATA...":GOSUB55200
1490 DIM MX(ND):DIM BX(ND):DIM ZA(ND)
1500 REM *********************
1502 REM * RANDOM GENERATION *
1504 REM *********************
1506 PA=(PA/100)*ND:FOR Q=0 TO ND-1
1510 IF (RND(1)*ND<PA) THEN BX(Q)=Q:GOTO 1520
1515 BX(Q)=INT(ND*RND(1))
1520 NEXT
1525 REM ****************
1527 REM * SHOW RESULTS *
1529 REM ****************
1530 K1$="SORTING WITH ":K2$=" SORT"
1540 Y=11:FOR ZP=1 TO RT
1550 A$=CHR$(199)+K1$+AL$(ZP)+K2$:GOSUB 55200
1560 GOSUB 1670:GOSUB 55300:TE=TI
1570 ON ZP GOSUB 1720,1890,3800,3900,3000,3500,2140,3200,2630,2280,2410
1580 GOSUB 55090:GOSUB 55000:Y=Y+1:NEXT
1650 A$="FINISHED. <R> REPEAT - <E> EXIT":GOSUB 55200:A=INKEY(0)
1652 A=INKEY(10) AND 223:IF A=0 THEN 1652
1654 IF A=ASC("R") THEN RUN
1656 IF A<>ASC("E") THEN 1652
1658 LOCATE 0,21:END
1660 REM ***************
1662 REM * COPY VECTOR *
1664 REM ***************
1670 FOR LO=0 TO ND-1:MX(LO)=BX(LO):NEXT
1675 FOR LO=1 TO 4:CK(LO)=0:NEXT
1680 RETURN
1710 REM ***************
1712 REM * BUBBLE SORT *
1714 REM ***************
1720 N=ND
1730 NE=0:FOR I=1 TO N-1
1740 CK(1)=CK(1)+1
1750 IF MX(I-1)>MX(I) THEN 1760:ELSE 1780
1760 X=MX(I-1):MX(I-1)=MX(I):MX(I)=X
1770 NE=I:CK(2)=CK(2)+1
1780 NEXT:N=NE
1790 IF N>1 THEN 1730
1800 RETURN
1880 REM *****************
1883 REM * COCKTAIL SORT *
1884 REM *****************
1890 LB=0:UB=ND-1
1900 IF LB>UB THEN RETURN
1910 NL=UB:NU=UB
1920 FOR I=LB TO UB
1930 CK(1)=CK(1)+1:IF MX(I)>MX(I+1) THEN 1940:ELSE 1960
1940 CK(2)=CK(2)+1:NU=I
1950 X=MX(I):MX(I)=MX(I+1):MX(I+1)=X
1960 NEXT
1970 UB=NU-1
1980 FOR I=UB TO LB STEP -1
1990 CK(1)=CK(1)+1:IF MX(I)>MX(I+1) THEN 2000:ELSE 2020
2000 CK(2)=CK(2)+1:NL=I
2010 X=MX(I):MX(I)=MX(I+1):MX(I+1)=X
2020 NEXT
2030 LB=NL+1:GOTO 1900
2130 REM ******************
2132 REM * INSERTION SORT *
2134 REM ******************
2140 FOR I=1 TO ND-1
2150 X=MX(I):J=I-1
2160 CK(1)=CK(1)+1:IF MX(J)>X THEN 2170:ELSE 2190
2170 CK(2)=CK(2)+1:MX(J+1)=MX(J):J=J-1
2180 IF J>=0 THEN 2160
2190 CK(2)=CK(2)+1:MX(J+1)=X
2200 NEXT:RETURN
2270 REM ******************
2272 REM * SELECTION SORT *
2274 REM ******************
2280 FOR I=0 TO ND-2
2290 K=I:X=MX(I)
2300 FOR J=I+1 TO ND-1
2310 CK(1)=CK(1)+1
2320 IF MX(J)<X THEN K=J:X=MX(J)
2350 NEXT J
2360 MX(K)=MX(I):MX(I)=X
2370 CK(2)=CK(2)+1
2380 NEXT
2390 RETURN
2400 REM **************
2402 REM * SHELL SORT *
2404 REM *************
2410 LB=0:UB=ND-1:IN=UB-LB
2420 IN=INT(IN/2.2)
2430 IF IN<1 THEN IN=1
2440 FL=0
2450 FOR I=LB TO UB-IN
2460 CK(1)=CK(1)+1
2470 IF MX(I)<=MX(I+IN) THEN 2500
2480 X=MX(I):MX(I)=MX(I+IN):MX(I+IN)=X:FL=1
2490 CK(2)=CK(2)+1
2500 NEXT
2510 IF FL=1 THEN 2440
2520 IF IN>1 THEN 2420
2530 RETURN
2620 REM **************
2622 REM * QUICK SORT *
2624 REM **************
2630 C1=0:C2=0:PN=1:ST(PN,1)=0:ST(PN,2)=ND-1
2640 IF PN<=0 THEN 2670
2650 A1=ST(PN,1):B1=ST(PN,2):PN=PN-1
2660 GOSUB 2690:GOTO 2640
2670 CK(1)=C1:CK(2)=C2
2680 RETURN
2690 T=0
2700 IF B1<=A1 THEN RETURN
2710 A=A1:B=B1:S=-1
2720 IF A>=B THEN 2810
2730 C1=C1+1
2740 IF MX(A)<=MX(B) THEN 2770
2750 C2=C2+1:T=MX(A):MX(A)=MX(B):MX(B)=T
2760 S=-S
2770 IF S<0 THEN 2790
2780 B=B-1:GOTO 2800
2790 A=A+1
2800 GOTO 2720
2810 IF A+1>=B1 THEN 2840
2820 PN=PN+1
2830 ST(PN,1)=A+1:ST(PN,2)=B1
2840 B1=A-1
2850 GOTO 2700
2997 REM **************
2998 REM * CYCLE SORT *
2999 REM **************
3000 FOR J=0 TO ND-2
3010 IT=MX(J)
3020 PS=J
3030 FOR I=J+1 TO ND-1
3040 CK(1)=CK(1)+1:IF MX(I)<IT THEN PS=PS+1
3050 NEXT
3060 IF PS=J THEN 3170
3070 CK(1)=CK(1)+1:IF IT=MX(PS) THEN PS=PS+1:GOTO 3070
3080 IF PS<>J THEN X=MX(PS):MX(PS)=IT:IT=X:CK(2)=CK(2)+1
3090 IF PS=J THEN 3170
3100 PS=J
3110 FOR I=J+1 TO ND-1
3120 CK(1)=CK(1)+1:IF MX(I)<IT THEN PS=PS+1
3130 NEXT
3140 CK(1)=CK(1)+1:IF IT=MX(PS) THEN PS=PS+1:GOTO 3140
3150 IF IT<>MX(PS) THEN X=MX(PS):MX(PS)=IT:IT=X:CK(2)=CK(2)+1
3160 GOTO 3090
3170 NEXT
3180 RETURN
3197 REM **************
3198 REM * MERGE SORT *
3199 REM **************
3200 GOSUB 3400:M=1:HI=ND-1
3210 FOR I=0 TO HI-1 STEP 2*M
3220 FR=I:MI=I+M-1:TT=HI:IF (I+2*M-1)<HI THEN TT=I+2*M-1
3240 GOSUB 3280
3250 NEXT:M=M*2
3260 IF M<=HI THEN 3210
3270 RETURN
3280 K=FR:II=FR:JJ=MI+1
3290 IF II<=MI AND JJ<=TT THEN 3300:ELSE 3330
3300 CK(1)=CK(1)+1:IF MX(II)<MX(JJ) THEN 3310:ELSE 3320
3310 CK(2)=CK(2)+1:TP(K)=MX(II):K=K+1:II=II+1:GOTO 3290
3320 CK(2)=CK(2)+1:TP(K)=MX(JJ):K=K+1:JJ=JJ+1:GOTO 3290
3330 IF II<ND AND II<=MI THEN 3340:ELSE 3350
3340 CK(2)=CK(2)+1:TP(K)=MX(II):K=K+1:II=II+1:GOTO 3330
3350 FOR LO=FR TO TT:MX(LO)=TP(LO):NEXT
3360 RETURN
3400 DIM TP(ND)
3410 FOR LO=0 TO ND-1:TP(LO)=MX(LO):NEXT
3420 RETURN
3497 REM *************
3498 REM * HEAP SORT *
3499 REM *************
3500 GOSUB 3550:E=ND-1
3510 IF E>0 THEN 3520:ELSE RETURN
3520 CK(2)=CK(2)+1:X=MX(E):MX(E)=MX(0):MX(0)=X
3530 SP=0:EN=E-1:GOSUB 3590
3540 E=E-1:GOTO 3510
3545 REM HEAPIFY
3550 SP=INT((ND-2)/2)
3560 IF SP<0 THEN RETURN
3570 EN=ND-1:GOSUB 3590
3580 SP=SP-1:GOTO 3560
3585 REM SIFTDOWN
3590 RO=SP
3600 IF (RO*2+1) > EN THEN RETURN
3610 CH=RO*2+1:CK(1)=CK(1)+1
3620 IF (CH+1<=EN AND MX(CH)<MX(CH+1)) THEN CH=CH+1
3630 CK(1)=CK(1)+1
3640 IF MX(RO)<MX(CH) THEN 3650:ELSE RETURN
3650 CK(2)=CK(2)+1
3660 X=MX(RO):MX(RO)=MX(CH):MX(CH)=X:RO=CH
3670 GOTO 3600
3797 REM ***************
3798 REM * CIRCLE SORT *
3799 REM ***************
3800 DIM SC(32):P=0:GOSUB 3870:RETURN
3810 IF B=E THEN RETURN
3820 SC(P)=B:SC(P+1)=E
3830 CK(1)=CK(1)+1:IF MX(SC(P))>MX(E) THEN 3840:ELSE 3850
3840 X=MX(SC(P)):MX(SC(P))=MX(E):MX(E)=X:C=1:CK(2)=CK(2)+1
3850 SC(P)=SC(P)+1:E=E-1:IF SC(P)<E THEN 3830
3860 P=P+2:GOSUB 3810:B=SC(P-2):E=SC(P-1):GOSUB 3810:P=P-2:RETURN
3870 B=0:E=ND-1:C=0:GOSUB 3810:IF C>0 THEN 3870
3880 RETURN
3897 REM *************
3898 REM * COMB SORT *
3899 REM *************
3900 GA=ND:SW=0
3910 IF GA=1 AND SW=0 THEN RETURN
3920 IF GA=1 THEN 3950
3930 GA=INT(GA/1.3):IF GA<1 THEN GA=1:GOTO 3950
3940 IF GA=10 OR GA=9 THEN GA=11
3950 I=0:SW=0
3960 IF I+GA>=ND THEN 3910
3970 CK(1)=CK(1)+1:IF MX(I)<=MX(I+GA) THEN 4000
3980 X=MX(I):MX(I)=MX(I+GA):MX(I+GA)=X
3990 CK(2)=CK(2)+1:RSW=SW+1
4000 I=I+1:GOTO 3960
54997 REM *****************
54998 REM * PRINT RESULTS *
54999 REM *****************
55000 GOSUB 55400:RESTORE 55070:FOR DM=1 TO 4:READ CC
55010 DT$=STR$(CK(DM)):DT$=MID$(DT$,2,LEN(DT$)-1)
55020 LOCATE CC,Y:IF DM<4 THEN PRINT DT$;:GOTO 55040
55030 PRINT CHR$(CK(DM));
55040 NEXT
55050 RESTORE
55060 RETURN
55070 DATA 12,21,30,38
55087 REM ****************
55088 REM * COMPUTE TIME *
55089 REM ****************
55090 GOSUB 55300:XN=(TI-TE)/100
55100 VV$=STR$(XN)
55110 CK(3)=VAL(LEFT$(VV$,7))
55120 RETURN
55197 REM ************************
55198 REM * PRINT STATUS MESSAGE *
55199 REM ************************
55200 LOCATE 0,7:PRINT SPC(40);
55210 LOCATE 0,7:PRINT A$;
55220 RETURN
55297 REM ****************
55298 REM * TIME ROUTINE *
55299 REM ****************
55300 TL=TMR(0):IF TL<0 THEN TL=65536+TL
55310 TH=TMR(1):IF TH<0 THEN TH=65536+TH
55320 TI=(TH*65536)+TL
55330 RETURN
55397 REM **************
55398 REM * CHECK SORT *
55399 REM **************
55400 LOCATE 1,7:PRINT SPC(39);:LOCATE 1,7:PRINT "CHECKING...";
55410 FL=1:I=0
55420 IF MX(I)>MX(I+1) THEN FL=0:GOTO 55490
55430 I=I+1:IF I<ND-1 THEN 55420
55440 FL=1
55450 FORI=0 TO ND-1:ZA(MX(I))=ZA(MX(I))+1:NEXT
55460 FORI=0 TO ND-1:ZA(BX(I))=ZA(BX(I))-1:NEXT
55470 FORI=0 TO ND-1:IFZA(I)<>0 THEN FL=1
55480 NEXT
55490 IF FL=0 THEN CK(4)=229:ELSE CK(4)=228
55500 RETURN
55995 REM  ** MAIN TITLE **
56000 DATA 217,143,143,143,143,143,143,143,143,143,143,143
56010 DATA 143,143,143,143,143,143,143,143,143,143,143,218
56020 DATA 144,32,32,32,83,32,79,32,82,32,84,32,45,32,84,32
56030 DATA 69,32,83,32,84,32,32,144
56040 DATA 220,143,143,143,143,143,143,143,143,143,143,143
56050 DATA 143,143,143,143,143,143,143,143,143,143,143,219
56055 REM  ** HEADER OF THE FORM **
56060 DATA 149,157,157,157,157,157,157,157,157,157,155,157
56070 DATA 157,157,157,157,157,157,157,155,157,157,157,157
56080 DATA 157,157,157,157,155,157,157,157,157,157,157,157
56090 DATA 157,155,157,150
56100 DATA 158,32,32,83,79,82,84,32,32,32,158,32,67,79,77
56110 DATA 80,83,46,32,158,32,83,87,65,80,83,32,32,158,32
56120 DATA 84,46,32,40,83,41,32,158,86,158
56130 DATA 154,157,157,157,157,157,157,157,157,157,148,157
56140 DATA 157,157,157,157,157,157,157,148,157,157,157,157
56150 DATA 157,157,157,157,148,157,157,157,157,157,157,157
56160 DATA 157,148,157,156
56205 REM  ** FOOTER OF THE FORM **
56210 DATA 152,157,157,157,157,157,157,157,157,157,153,157
56220 DATA 157,157,157,157,157,157,157,153,157,157,157,157
56230 DATA 157,157,157,157,153,157,157,157,157,157,157,157
56240 DATA 157,153,157,151
56300 REM ** ALGHORITHMS NAMES **
56310 DATA "BUBBLE","COCKTAIL","CIRCLE","COMB","CYCLE","HEAP"
56320 DATA "INSERTION","MERGE","QUICK","SELECTION","SHELL"
